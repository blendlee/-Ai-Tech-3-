[파이썬] 
기본적인 컴퓨터 프로그램 작동 원리, 디렉토리 등 cmd 환경과 파이썬 개발 환경에 대하여 공부하였다.



[Ai math]


1.벡터


Norm : 한 벡터의 원점에서부터의 거리 벡터의 Norm에는 두 가지가 존재한다. L1 Norm 은 벡터의 각 성분의 절대값의 합이다 L2 Norm 은 벡터은 각 성분의 제곱값의 합의 제곱근이다.
Norm을 두 가지로 분류한 이유는 구하는 Norm의 종류에 따라 기하학적 성질이 달라지기 때문이다. 또한 L1 Norm은 Robust학습, Lasso 회귀에 쓰이고, L2 Norm은 Laplace 근사, Ridge 회귀에 쓰인다.

내적 : 한 벡터를 다른 벡터에 정사영한 길이 numpy 메서드 : np.inner(행렬1,행렬2)



2.행렬

벡터가 한 점의 성분을 표현했다면, 행렬은 여러 개의 벡터들의 집합이다. 따라서 백터의 갯수x벡터의 성분 갯수 의 크기를 가진 2차원 배열이다 
딥러닝에서의 행렬의 주요한 역할은 어떠한 벡터를 다른 차원으로 transpose 시킨는 것이다.

전치 행렬 : 한 행렬의 모든 성분의 행과 열을 뒤바꾼 행렬 numpy 메서드 : np.transpose(행렬1)

행렬 곱셉은 두 행렬간 크기가 맞아야 하며, 두 행렬간의 곱은 벡터들의 내적으로 계산된다. ex. NxM 행렬과 MxL행렬 >> NxL행렬 행렬 또한 내적이 존재하는데 이는 행렬 곱셈과 연산이 다르다는 것을 주의하여야 한다. 행렬의 곱셉은 A행렬의 행과 B행렬의 열을 내적했다면 행렬의 내적은 A행렬의 행과 B행렬의 행을 내적하여야 한다. 따라서 행렬 내적에도 두 행렬간 크기가 맞아야 한다. ex. NxM 행렬과 LxM 행렬 >> NxL행렬

역행렬 : 한 행렬에 대하여 어떤 행렬을 곱했을때 항등행렬이 나오도록 만드는 행렬 역행렬이 존재하기 위해선 행과 열의 크기가 같으며 determinat가 0이 되면 안된다. 하지만 이 때 행과 열의 크기가 달라도 역행렬을 구할 수 있는데 이는 정확한 역행렬은 아니라서 유사역행렬 또는 무어펜로즈 역행렬이라고 한다. numpy 메서드 : np.linalg.inv(행렬1)
무어펜려즈 역행렬 = A와 A의 전치행렬을 곱한것에 역행렬과 A의 전치행렬을 곱한것 이 때 행과 열의 크기에 따라 연산순서가 달라질 수 있다. numpy 메서드 : np.linalg.pinv(행렬1)

역행렬의 응용: 미지수보다 데이터의 수가 적을 경우, 연립방정식의 해를 구할 수 있다. Ax=b
미지수보다 데이터의 수가 많을 경우, 수 많은 데이터들의 선형 회귀식을 찾을 수 있다. XB=y 이때 y는 모든 데이터들을 선형으로 변형한 선형식이지만 존재하지 않는 경우가 많기 때문에 y와 최적의 거리를 가진 y'과 이에 맞는 B를 구하여야 한다. min||y-y'||

sklearn활용 구현 from sklearn.linear_model import LinerRegression model = LinearRegression() model.fit(x,y) y'=model.predict(x_test)
numpy활용 구현 x1=np.array([np.append(x,[1]) for x in X]) beta= np.linalg.pinv(x1) @ y y'=np.append(x,[1]) @ beta



